services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.src_valid_mark=1
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=postgres
      - DB_USER=wireguard
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=wireguard
      - JWT_SECRET=${JWT_SECRET}
      - WIREGUARD_CONFIG_PATH=/etc/wireguard
      - WG_PUBLIC_IP=${WG_PUBLIC_IP}
      - DEFAULT_ADMIN_PASSWORD=${DEFAULT_ADMIN_PASSWORD}
    volumes:
      # - ./backend:/app
      - wireguard_config:/etc/wireguard
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - REACT_APP_API_URL=http://localhost:8080
    ports:
      - "3000:3000"
    depends_on:
      - backend
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=wireguard
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=wireguard
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U wireguard -d wireguard"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  postgres_data:
  wireguard_config: 
